import numpy as np
import matplotlib.pyplot as plt


fig = plt.figure(figsize=(12, 5))

# baseline_accs = 0.01 * np.array([40.04,51.16,54.79,60.48,63.53,65.41,68.17,68.65,70.94,69.75,72.93,73.93,74.3,74.06,75.26,74.82,76.15,76.5,77.16,77.0,78.29,78.43,78.59,80.02,79.63,79.55,80.78,80.92,80.14,80.46,80.65,81.32,80.64,81.16,81.43,81.92,81.94,81.46,81.08,81.64,80.96,82.05,82.32,81.65,81.41,81.85,81.88,82.53,82.07,81.77,82.87,82.47,82.17,82.8,82.03,82.08,82.14,82.06,82.52,82.36,82.73,82.33,82.52,82.71,82.3,82.38,82.66,82.89,82.93,82.51,82.5,82.83,82.36,82.99,83.19,82.67,82.62,82.61,82.76,82.73,82.64,82.58,82.5,83.19,82.52,82.86,82.19,82.4,83.12,83.48,82.4,82.73,82.88,82.37,82.61,82.99,82.77,82.55,83.03,82.98,83.37,83.04,83.47,83.41,83.51,83.37,83.45,83.0,83.42,83.3,83.19,83.35,83.03,83.24,83.7,82.34,83.53,82.6,83.62,83.28,84.06,83.48,83.93,83.46,83.56,83.95,83.4,83.87,83.81,83.98,83.89,83.77,84.11,83.96,84.08,84.38,84.0,84.0,83.78,84.09,84.4,83.82,83.87,83.95,84.12,83.83,84.23,84.2,83.97,84.09,84.23,83.91,84.27,84.36,84.35,84.4,84.45,84.36,84.24,84.27,84.41,84.43,84.42,84.36,84.57,84.23,84.44,84.32,84.51,84.51,84.45,84.58,84.56,84.56,84.6,84.61,84.58,84.86,84.73,84.7,84.57,84.61,84.58,84.47,84.66,84.65,84.62,84.54,84.51,84.47,84.5,84.52,84.54,84.55,84.54,84.55,84.54,84.53,84.52,84.53
# ])
# op_accs = 0.01 * np.array([38.53,49.63,57.98,60.39,64.67,65.17,67.0,66.53,69.99,71.49,72.2,72.71,74.09,75.02,75.69,75.49,76.65,76.51,78.17,78.04,78.59,78.5,79.14,79.22,80.0,80.28,80.04,79.41,80.59,80.97,80.52,81.66,81.4,81.72,81.33,81.64,82.06,81.67,80.98,81.89,81.79,81.6,81.84,81.82,81.87,81.83,82.44,82.19,82.32,81.64,82.34,82.94,82.31,82.59,82.4,82.01,82.43,82.39,82.22,81.55,82.73,82.19,83.13,81.72,82.8,83.21,83.1,82.71,82.48,82.72,83.18,83.0,83.23,82.56,82.58,82.83,82.75,82.71,82.98,83.01,83.26,83.25,82.73,82.66,82.18,83.07,83.46,83.0,82.97,82.64,82.81,82.97,82.86,83.47,82.82,82.93,82.39,82.93,83.2,83.23,82.98,83.36,83.81,83.59,82.92,83.69,83.56,83.45,83.28,83.42,83.63,83.26,83.81,83.4,84.07,83.78,83.48,83.39,83.7,84.07,83.79,83.79,83.85,83.46,83.75,83.89,83.62,83.45,83.69,83.56,83.34,83.87,83.47,83.81,83.57,83.92,84.28,83.92,84.24,84.32,84.15,84.38,84.09,83.88,84.26,84.25,84.18,84.19,84.04,84.11,83.64,84.05,83.97,84.24,84.39,84.48,84.38,84.28,84.41,84.48,84.38,84.41,84.46,84.52,84.48,84.54,84.65,84.65,84.6,84.44,84.48,84.4,84.73,84.57,84.55,84.56,84.57,84.59,84.43,84.61,84.55,84.62,84.66,84.71,84.65,84.66,84.68,84.71,84.68,84.75,84.68,84.65,84.61,84.59,84.6,84.56,84.56,84.56,84.56,84.56
# ])
# comp_accs = 0.01 * np.array([39.92,50.23,57.49,61.33,62.73,66.37,65.76,68.47,69.63,70.24,73.26,73.21,75.01,74.69,76.35,76.08,76.86,77.39,77.33,77.69,78.14,77.74,79.02,80.16,79.98,80.07,79.94,80.93,80.72,80.74,80.99,81.55,81.26,81.68,81.93,81.92,82.27,82.2,82.28,82.04,81.9,81.41,82.37,82.46,82.01,82.32,82.99,82.33,82.31,82.49,82.76,82.87,83.06,82.77,82.94,82.99,82.81,82.55,82.78,82.56,82.35,82.68,83.02,83.29,83.16,83.08,83.65,82.39,83.02,82.92,83.2,82.38,82.83,82.93,83.54,83.26,83.14,83.16,83.02,82.98,82.86,83.53,83.27,82.86,83.04,82.92,83.64,82.61,83.18,82.67,83.65,83.64,83.43,82.87,83.22,83.45,83.82,83.15,83.48,83.89,83.75,83.34,83.13,83.58,83.67,83.23,83.18,83.54,83.17,83.62,83.92,83.86,83.7,83.67,83.2,83.8,83.47,83.67,83.25,83.68,83.48,83.56,83.59,83.57,84.12,84.15,84.02,83.91,83.81,84.29,84.27,84.44,84.0,84.21,84.54,84.16,84.1,84.2,84.42,84.58,84.08,84.42,84.35,84.42,84.12,84.49,84.34,84.32,84.41,84.7,84.66,84.72,84.42,84.78,84.65,84.85,84.52,84.73,84.62,84.9,84.83,84.9,84.75,84.7,84.71,84.83,84.71,84.81,84.6,84.87,84.96,84.76,84.89,84.85,85.04,85.01,84.84,84.89,84.92,84.84,84.93,85.04,84.92,84.84,84.84,84.85,84.96,84.92,85.02,84.84,84.89,84.88,84.87,84.86,84.85,84.9,84.89,84.89,84.89,84.89
# ])


baseline_accs = 0.01 * np.array([39.7,52.38,56.61,58.46,63.3,65.72,67.61,69.53,70.0,71.39,71.1,72.29,74.09,74.91,73.88,75.75,77.24,77.14,77.18,75.95,78.89,79.74,78.16,79.99,79.33,80.3,80.91,80.09,80.65,81.02,80.96,81.56,81.01,81.63,81.38,80.94,81.2,81.53,81.92,81.64,82.34,82.78,82.17,82.22,82.3,82.36,82.64,82.19,82.18,82.12,81.95,82.49,80.99,82.3,82.28,81.88,82.17,82.76,82.57,81.86,82.65,82.57,82.75,82.99,82.09,82.43,82.15,82.65,82.81,83.09,82.76,82.14,82.91,82.31,82.83,82.79,82.27,82.52,82.75,82.8,83.04,83.32,82.89,83.0,82.85,83.1,83.06,83.39,82.82,83.08,83.21,82.59,83.07,83.0,82.83,83.26,83.43,83.67,83.1,83.0,83.5,82.77,83.21,83.34,83.16,83.58,83.85,83.18,83.57,83.07,83.08,83.49,83.72,83.63,83.69,83.5,83.95,83.42,83.51,83.74,83.25,83.57,83.45,83.68,83.61,83.29,83.47,83.75,83.5,84.03,84.18,84.31,84.18,83.82,84.07,84.34,83.83,84.29,84.41,83.59,84.48,84.39,84.21,84.07,84.26,84.4,84.5,84.58,84.42,84.37,84.38,84.23,84.15,84.33,84.2,84.16,84.46,84.39,84.22,84.4,84.4,84.42,84.19,84.49,84.37,84.52,84.48,84.57,84.62,84.57,84.58,84.72,84.67,84.67,84.66,84.64,84.59,84.58,84.7,84.73,84.55,84.58,84.59,84.68,84.6,84.64,84.7,84.7,84.67,84.66,84.62,84.56,84.59,84.68,84.65,84.63,84.64,84.63,84.64,84.64
])
op_accs = 0.01 * np.array([38.97,50.38,55.63,58.66,62.95,65.49,67.73,66.73,70.5,71.62,71.83,73.44,73.8,74.48,75.61,76.49,77.05,77.08,78.18,78.16,78.33,78.02,78.83,79.65,79.55,79.54,80.84,79.59,80.97,81.26,81.25,81.16,81.81,81.64,81.39,81.82,81.74,80.92,81.01,81.45,81.65,81.49,82.32,82.2,81.89,81.86,82.6,82.37,81.96,81.94,81.87,82.4,82.26,82.52,82.88,81.5,81.94,82.3,82.72,82.58,82.88,82.83,83.08,82.97,83.01,82.25,82.06,82.77,82.87,83.29,82.95,82.44,83.27,82.62,82.19,83.35,83.03,83.47,83.04,82.99,83.67,83.48,82.8,82.98,82.82,83.07,83.54,82.93,83.11,83.17,82.97,83.43,82.9,83.22,83.57,83.14,83.61,83.39,83.46,83.27,83.35,82.98,83.43,83.58,83.44,83.56,83.71,83.82,83.55,83.49,83.79,83.76,83.19,83.47,84.06,83.79,83.7,83.75,84.09,84.21,83.85,83.71,83.65,83.99,84.33,84.04,83.95,84.07,84.3,84.09,84.42,84.15,84.27,84.26,84.21,84.55,84.13,84.32,84.45,84.51,84.19,84.53,84.28,84.14,84.24,84.63,84.13,84.23,84.65,84.75,84.23,84.74,84.88,84.64,84.82,84.93,84.84,84.7,84.78,84.65,84.73,84.77,84.81,84.71,84.89,84.77,84.79,84.83,84.79,84.89,85.03,84.85,84.94,84.96,84.94,84.81,84.97,84.96,84.75,85.03,84.97,84.89,84.98,85.04,85.06,85.0,85.06,85.08,85.09,85.13,85.08,85.04,85.04,85.13,85.1,85.13,85.11,85.13,85.1,85.1
])
comp_accs = 0.01 * np.array([39.29,49.99,56.93,57.4,63.15,65.09,66.71,66.82,70.61,71.0,70.66,73.47,73.52,74.26,75.0,75.52,76.68,77.76,77.39,77.64,77.33,79.15,78.9,79.3,78.96,80.42,79.78,80.34,81.12,79.88,81.2,79.89,81.19,81.34,81.45,81.5,81.41,82.62,82.1,82.26,81.91,82.46,82.85,82.66,81.9,82.59,82.51,82.97,82.5,83.09,83.05,82.9,82.77,82.88,82.47,82.68,82.17,82.73,82.99,82.73,82.84,83.35,82.92,83.28,82.7,82.99,83.4,83.7,83.14,83.12,83.18,83.56,83.13,82.97,83.34,83.31,83.16,83.55,83.22,83.98,83.2,83.4,83.4,83.42,84.04,83.26,83.36,83.08,83.72,83.25,83.61,83.97,83.78,83.27,83.4,84.05,83.69,83.95,84.12,83.58,83.24,84.12,83.68,84.15,84.26,84.17,83.72,83.45,84.28,83.74,83.48,83.73,83.64,84.13,84.17,84.46,84.69,84.28,84.61,84.47,84.05,84.23,84.12,84.52,84.51,83.77,84.34,84.05,84.48,84.3,84.41,84.32,84.12,84.4,84.61,84.31,84.28,84.14,84.13,84.58,84.19,84.48,84.5,84.65,84.66,84.67,84.93,84.48,84.42,84.12,84.62,84.48,84.66,84.17,84.53,84.5,84.75,84.53,84.65,84.67,84.78,84.62,84.57,84.63,84.59,84.68,84.51,84.73,84.8,84.93,84.95,84.91,84.89,84.97,84.97,85.01,84.95,85.03,85.03,85.17,85.03,85.09,85.09,84.96,84.94,85.02,85.05,84.99,85.11,85.11,85.11,85.15,85.11,85.17,85.16,85.11,85.11,85.14,85.15,85.15
])


ax = fig.add_subplot(121)
ax.plot(baseline_accs, c='green', linewidth=5, label='Original', alpha=0.75)
ax.plot(op_accs, c='blue', linewidth=5, label='Original + DLN', alpha=0.75)
ax.plot(comp_accs, c='orange', linewidth=5, label='Original + C-DLN', alpha=0.75)
ax.set_xlabel('Epochs', fontsize=20)
ax.set_ylabel('Test Accuracy', fontsize=20)
ax.set_ylim(0.82, 0.855)
ax.legend(fontsize=20)
ax.tick_params(axis='both', which='major', labelsize=18)

ax = fig.add_subplot(122)


ax.plot(np.arange(200) * (52/200), baseline_accs, c='green', linewidth=5, label='Original', alpha=0.75)
ax.plot(np.arange(200) * (72/200), op_accs, c='blue', linewidth=5, label='Original + DLN', alpha=0.75)
ax.plot(np.arange(200) * (52/200), comp_accs, c='orange', linewidth=5, label='Original + C-DLN', alpha=0.75)
ax.set_xlabel('Time (min)', fontsize=20)
ax.set_ylabel('Test Accuracy', fontsize=20)
ax.set_ylim(0.82, 0.855)
ax.legend(fontsize=20)
ax.tick_params(axis='both', which='major', labelsize=18)

fig.tight_layout()

plt.savefig('CIFAR10_200epoch_Accs.png', dpi=300, bbox_inches='tight')
# exit()